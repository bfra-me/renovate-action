---
name: Renovate

on:
  push:
    branches: [main]
    paths:
      - '*.json'
      - '.github/renovate.json'
      - '.github/workflows/renovate.yaml'
  schedule:
    - cron: '0/15 * * * *'
  workflow_call:
    inputs:
      autodiscover:
        description: Autodiscover all repositories.
        required: false
        type: boolean
        default: true
      branch:
        description: Run Renovate on this branch.
        required: false
        type: string
      dry_run:
        description: Perform a dry run by logging messages instead of creating/updating/deleting branches and PRs.
        required: false
        type: boolean
        default: true
      log_level:
        description: Set the log level.
        required: false
        type: string
        default: 'debug'
      print_config:
        description: Log the fully-resolved Renovate config for each repository, plus fully-resolved presets.
        required: false
        type: boolean
        default: false
      use_slim:
        description: Use the `slim` version of the Renovate Docker image.
        required: false
        type: boolean
        default: true
    secrets:
      APPLICATION_ID:
        description: GitHub App ID
        required: true
      APPLICATION_PRIVATE_KEY:
        description: GitHub App private key
        required: true
  workflow_dispatch:
    inputs:
      autodiscover:
        description: Autodiscover all repositories.
        required: false
        type: boolean
        default: true
      branch:
        description: Run Renovate on this branch.
        required: false
        type: string
      dry_run:
        description: Perform a dry run by logging messages instead of creating/updating/deleting branches and PRs.
        required: false
        type: boolean
        default: true
      log_level:
        description: Set the log level.
        required: false
        type: choice
        default: 'debug'
        options: ['trace', 'debug', 'info', 'warn', 'error', 'fatal']
      print_config:
        description: Log the fully-resolved Renovate config for each repository, plus fully-resolved presets.
        required: false
        type: boolean
        default: false
      use_slim:
        description: Use the `slim` version of the Renovate Docker image.
        required: false
        type: boolean
        default: true

concurrency:
  group: '${{ github.repository }}-${{ github.workflow }}-$${{ github.ref }}'
  cancel-in-progress: false

permissions: {}

env:
  RENOVATE_VERSION: 35.51.0 # renovate: datasource=docker depName=renovate packageName=renovate/renovate

jobs:
  renovate:
    name: Renovate
    runs-on: ubuntu-latest
    steps:
      - name: Configure workflow run
        id: configure
        # Use the contains function to convert the boolean input to a string and compare it to 'false'. This is
        # required when the workflow is triggered from workflow_call because the github context is that of the workflow
        # that called this workflow.
        run: |
          branches="$(jq 'split(",")' -Rc <(echo '${{ inputs.branch }}'))"
          if [[ "$branches" != "[]" ]]; then
            echo "RENOVATE_BASE_BRANCHES=$branches" >> $GITHUB_ENV
            echo "RENOVATE_USE_BASE_BRANCH_CONFIG=merge" >> $GITHUB_ENV
          fi
          env_vars=$(sed 's/^[[:space:]]*//' <<EOF
            AUTODISCOVER=${{ inputs.autodiscover || contains(inputs.autodiscover, 'false') && 'false' || 'true' }}
            DRY_RUN=${{ inputs.dry_run || contains(inputs.dry_run, 'false') && 'false' }}
            FORCE_COLOR=true
            LOG_LEVEL=${{ inputs.log_level || 'debug' }}
          EOF
          )
          echo "$env_vars" >> $GITHUB_ENV
          use_slim=${{ inputs.use_slim || contains(inputs.use_slim, 'false') && 'false' || 'true' }}
          $use_slim && slim_suffix='-slim' || slim_suffix=''
          echo "DOCKER_IMAGE=renovate/renovate:${{ env.RENOVATE_VERSION }}${slim_suffix}" >> $GITHUB_OUTPUT
          echo "USE_SLIM=$use_slim" >> $GITHUB_OUTPUT
        shell: bash

      - name: Cache Docker images
        uses: ScribeMD/docker-cache@820df2d639d90d13c25ec323a10b3c1b485b9f64 # 0.3.0
        with:
          key: ${{ steps.configure.outputs.DOCKER_IMAGE }}
          read-only: ${{ github.repository != 'bfra-me/renovate-config' }}

      - name: Get Workflow Token
        id: get_workflow_token
        uses: peter-murray/workflow-application-token-action@8e1ba3bf1619726336414f1014e37f17fbadf1db # v2.1.0
        with:
          application_id: ${{ secrets.APPLICATION_ID }}
          application_private_key: ${{ secrets.APPLICATION_PRIVATE_KEY }}
          organization: ${{ github.repository_owner }}
          permissions: >
            checks:write,
            contents:write,
            issues:write,
            pull_requests:write,
            vulnerability_alerts:read,
            workflows:write

      - name: Renovate ${{ env.RENOVATE_VERSION }}
        uses: renovatebot/github-action@95cbcd7e8b9d0d69e15ba26208631839ce7eee48 # v36.0.2
        with:
          env-regex: '^(?:RENOVATE_\w+|FORCE_COLOR|GITHUB_COM_TOKEN|LOG_LEVEL|NODE_OPTIONS)$'
          renovate-version: ${{ env.RENOVATE_VERSION }}
          token: 'x-access-token:${{ steps.get_workflow_token.outputs.token }}'
          useSlim: ${{ steps.configure.outputs.USE_SLIM }}
        env:
          RENOVATE_CONFIG: |-
            {
              allowPlugins: true,
              allowPostUpgradeCommandTemplating: true,
              allowScripts: true,
              allowedPostUpgradeCommands: [
                '^npm ci$',
                '^npm ci --ignore-scripts$',
                '^npx prettier --write \\.$',
                '^pnpm install --frozen-lockfile$',
                '^pnpm install --frozen-lockfile --ignore-scripts$',
                '^pnpm prettier --write \\.$',
                '^yarn install --frozen-lockfile$',
                '^yarn install --frozen-lockfile --ignore-scripts$',
                '^yarn install --immutable$',
                '^yarn install --immutable --immutable-cache$',
              ],
              autodiscover: ${{ env.AUTODISCOVER }},
              description: [
                'Use the global config preset for the @bfra-me organization.',
                '_See the [renovate workflow](https://github.com/bfra-me/renovate-config/blob/main/.github/workflows/renovate.yaml) for details._',
              ],
              dryRun: ${{ fromJSON(env.DRY_RUN) && '"full"' || 'null' }},
              exposeAllEnv: true,
              gitAuthor: 'bfra-me[bot] <118100583+bfra-me[bot]@users.noreply.github.com>',
              gitIgnoredAuthors: [
                'bot@renovateapp.com',
                '29139614+renovate[bot]@users.noreply.github.com',
                'support@github.com',
                '261136+bfra-me@users.noreply.github.com',
              ],
              packageRules: [
                {
                  matchPackagePatterns: ['*'],
                  rangeStrategy: 'pin',
                },
                {
                  matchDepTypes: ['engines', 'peerDependencies'],
                  rangeStrategy: 'update-lockfile',
                }
              ],
              platform: 'github',
              platformCommit: true,
              printConfig: ${{ inputs.print_config || false }},
              repositories: ${{ !fromJSON(env.AUTODISCOVER) && format('["{0}"]', github.repository) || 'null' }},
              schedule: ['at any time'],
              username: 'bfra-me[bot]',
            }
