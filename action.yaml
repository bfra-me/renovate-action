---
name: Renovate Action
description: Self-hosted Renovate GitHub Action
author: bfra.me

inputs:
  autodiscover:
    description: Autodiscover all repositories.
    required: false
    default: 'false'
  branch:
    description: Run Renovate on this branch.
    required: false
  cache:
    description: Enable the Renovate cache.
    required: false
    default: 'false'
  dry-run:
    description: Perform a dry run by logging messages instead of creating/updating/deleting branches and PRs.
    required: false
    default: 'false'
  log-level:
    description: Set the log level.
    required: false
    default: info
  print-config:
    description: Log the fully-resolved Renovate config for each repository, plus fully-resolved presets.
    required: false
    default: 'false'
  renovate-app-id:
    description: The ID of the GitHub App that will be used to run Renovate.
    required: true
  renovate-app-private-key:
    description: The private key of the GitHub App that will be used to run Renovate.
    required: true

outputs:
  docker-image:
    description: The name of the Renovate Docker image
    value: ${{ steps.configure.outputs.docker-image }}
  renovate-version:
    description: The Renovate version
    value: ${{ steps.configure.outputs.renovate-version }}

runs:
  steps:
    - id: get-renovate-app
      name: Get Renovate GitHub App Installation
      uses: actions/create-github-app-token@c1a285145b9d317df6ced56c09f525b5c2b6f755 # v1.11.1
      with:
        app-id: ${{ inputs.renovate-app-id }}
        private-key: ${{ inputs.renovate-app-private-key }}
        owner: ${{ github.repository_owner }}

    - name: Configure
      id: configure
      env:
        RENOVATE_VERSION: 39.133.4 # renovate: datasource=docker depName=renovate packageName=ghcr.io/renovatebot/renovate versioning=semver
        autodiscover: ${{ inputs.autodiscover != '' && inputs.autodiscover || 'false' }}
        dry_run: ${{ inputs.dry-run != '' && inputs.dry-run || 'false' }}
        log_level: ${{ inputs.log-level != '' && inputs.log-level || 'info' }}
        print_config: ${{ inputs.print-config != '' && inputs.print-config || 'false' }}
        renovate_app_id: ${{ inputs.renovate-app-id }}
        renovate_app_slug: ${{ steps.get-renovate-app.outputs.app-slug }}
        cache: ${{ inputs.cache == 'true' }}
        zzglobal_config: |-
          {
            allowedPostUpgradeCommands: [
              '^(npx )?corepack(?:@\\d+(?:\\.\\d+\\.\\d+)?)? enable$',
              '^npm ci( --force)?( --ignore-scripts)?$',
              '^npm install -g (npm|pnpm|yarn)(?:@\\d+(?:\\.\\d+\\.\\d+)?)?$',
              '^(?:p?npx|pnpm|yarn) prettier(?:@\\d+(?:\\.\\d+\\.\\d+)?)?( --no-color)? --write \\.$',
              '^(pnpm|yarn) install( --force)?( --frozen-lockfile)?( --ignore-scripts)?$',
              '^(?:npm|pnpm|yarn)(?:\\srun)?\\s(?:bootstrap|build(-release)?|clean|fix|format|update-snapshots)$',
              '^yarn install( --force)?( --immutable)?( --immutable-cache)?$',
              '^(?:\\[ -w \\.npmrc \\] && )?git checkout -- \\.npmrc(?: \\|\\| true)?$',
            ],
            description: [
              'Use the global config preset for the @bfra-me organization.',
              '_See the [self-hosted Renovate action](https://github.com/bfra-me/renovate-action/blob/main/action.yaml) for details._',
            ],
            onboardingConfig: {
              '$schema': 'https://docs.renovatebot.com/renovate-schema.json',
              extends: ['github>bfra-me/renovate-config'],
            },
            onboardingConfigFileName: '.github/renovate.json5',
            onboardingPrTitle: 'feat(deps): configure Renovate',
            onboardingRebaseCheckbox: true,
          }
      run: |
        renovate_username="${{ env.renovate_app_slug }}[bot]"
        renovate_git_author_email="${{ env.renovate_app_id }}+${renovate_username}@users.noreply.github.com"
        renovate_git_author="${renovate_username} <${renovate_git_author_email}>"
        # Create outputs for this configuration
        sed 's/^[[:space:]]*//' <<EOF >> $GITHUB_OUTPUT
          autodiscover=${{ env.autodiscover }}
          base-branches=${{ inputs.branch && format('["{0}"]', inputs.branch) || '' }}
          cache-dir=${RENOVATE_CACHE_DIR:-/tmp/renovate/cache}
          cache-key=renovate-cache-v$(echo ${{ env.RENOVATE_VERSION }} | cut -d. -f1)
          docker-image=ghcr.io/renovatebot/renovate:${{ env.RENOVATE_VERSION }}
          dry-run=${{ env.dry_run }}
          enable-cache=${{ env.cache }}
          global-config=$(echo "${zzglobal_config}" | tr -d '\n')
          log-level=${{ env.log_level }}
          print-config=${{ env.print_config }}
          renovate-git-author-email=${renovate_git_author_email}
          renovate-git-author=${renovate_git_author}
          renovate-username=${renovate_username}
          renovate-version=${{ env.RENOVATE_VERSION }}
        EOF
      shell: 'bash -Eeuo pipefail {0}'

    - name: Restore Renovate Cache
      id: renovate-cache
      if: steps.configure.outputs.enable-cache == 'true'
      uses: actions/cache/restore@1bd1e32a3bdc45362d1e726936510720a7c30a57 # v4.2.0
      with:
        enableCrossOsArchive: true
        key: ${{ steps.configure.outputs.cache-key }}
        path: ${{ steps.configure.outputs.cache-dir }}

    - name: Prepare Renovate Cache
      if: steps.configure.outputs.enable-cache == 'true'
      run: |
        [ -d /tmp/renovate ] && sudo chown -R runneradmin:root /tmp/renovate || true
      shell: 'bash -Eeuo pipefail {0}'

    - name: Renovate ${{ steps.configure.outputs.renovate-version }}
      uses: renovatebot/github-action@3f10d7a25cf0aa7b37519aa771ed9143fcbb5da5 # v41.0.10
      env:
        FORCE_COLOR: '3'
        LOG_LEVEL: ${{ steps.configure.outputs.log-level }}
        RENOVATE_AUTODISCOVER: 'true'
        RENOVATE_AUTODISCOVER_FILTER: ${{ steps.configure.outputs.autodiscover == 'false' && github.repository || '' }}
        RENOVATE_BASE_BRANCHES: ${{ steps.configure.outputs.base-branches }}
        RENOVATE_USE_BASE_BRANCH_CONFIG: ${{ steps.configure.outputs.base-branches && 'merge' || 'none' }}
        RENOVATE_BRANCH_PREFIX_OLD: renovate-github/
        RENOVATE_BINARY_SOURCE: install
        RENOVATE_CACHE_DIR: ${{ steps.configure.outputs.cache-dir }}
        RENOVATE_CONFIG: ${{ steps.configure.outputs.global-config }}
        RENOVATE_DEPENDENCY_DASHBOARD_FOOTER: '\n- [ ] <!-- manual job -->Check here to trigger a Renovate run on this repository\n'
        RENOVATE_DRY_RUN: ${{ fromJSON(steps.configure.outputs.dry-run) && 'full' || '' }}
        RENOVATE_GIT_AUTHOR: ${{ steps.configure.outputs.renovate-git-author }}
        RENOVATE_GIT_IGNORED_AUTHORS: |-
          [
            "bot@renovateapp.com",
            "29139614+renovate[bot]@users.noreply.github.com",
            "support@github.com",
            "261136+bfra-me@users.noreply.github.com",
            "118100583+bfra-me[bot]@users.noreply.github.com",
            "137683033+mrbro-bot[bot]@users.noreply.github.com",
            "109017866+fro-bot[bot]@users.noreply.github.com",
            "${{ steps.configure.outputs.renovate-git-author-email }}"
          ]
        RENOVATE_PLATFORM: github
        RENOVATE_PRESET_CACHE_PERSISTENCE: ${{ steps.configure.outputs.enable-cache == 'true' }}
        RENOVATE_PRINT_CONFIG: ${{ steps.configure.outputs.print-config }}
        RENOVATE_REPOSITORY_CACHE: ${{ steps.configure.outputs.enable-cache == 'true' && 'enabled' || 'disabled' }}
        RENOVATE_USERNAME: ${{ steps.configure.outputs.renovate-username }}
      with:
        env-regex: '^(?:CI|FORCE_COLOR|GITHUB_(?:(?!PATH|ENV).)+|(?:HTTPS?|NO)_PROXY|(?:https?|no)_proxy|LOG_LEVEL|NODE_OPTIONS|RENOVATE_\w+|RUNNER_\w+)$'
        docker-cmd-file: '${{ github.action_path }}/docker/entrypoint.sh'
        docker-user: root
        mount-docker-socket: true
        renovate-version: ${{ steps.configure.outputs.renovate-version }}
        token: ${{ steps.get-renovate-app.outputs.token }}

    - name: Finalize Renovate Cache
      if: |
        (success() || failure()) &&
        steps.configure.outputs.enable-cache == 'true' &&
        steps.renovate-cache.outputs.cache-hit != 'true' || github.event_name == 'push'
      env:
        GH_REPO: ${{ github.event.repository.full_name }}
        GH_TOKEN: ${{ steps.get-renovate-app.outputs.token }}
      run: |
        [ -d /tmp/renovate ] && sudo chown -R $(whoami) /tmp/renovate
        gh api -X DELETE /repos/{owner}/{repo}/actions/caches?key=${{ steps.configure.outputs.cache-key }} ||
          echo "Could not delete cache for $GH_REPO"
      shell: 'bash -Eeuo pipefail {0}'

    - name: Save Renovate cache
      if: |
        (success() || failure()) &&
        steps.configure.outputs.enable-cache == 'true' &&
        steps.renovate-cache.outputs.cache-hit != 'true' || github.event_name == 'push'
      uses: actions/cache/save@1bd1e32a3bdc45362d1e726936510720a7c30a57 # v4.2.0
      with:
        enableCrossOsArchive: true
        key: ${{ steps.configure.outputs.cache-key }}
        path: ${{ steps.configure.outputs.cache-dir }}
  using: composite
